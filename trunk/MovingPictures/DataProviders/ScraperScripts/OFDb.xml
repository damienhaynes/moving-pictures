<?xml version="1.0" encoding="utf-8" ?>
<ScriptableScraper>
  <details>
    <!-- These details are for display purposes only. -->
    <name>OFDb (German)</name>
    <author>Armand Pondman (armandp)</author>
    <description>This script pulls data from ofdb.de</description>

    <!-- 
    These two fields uniquely identify the script. The ID should never 
    change and should be unique (no other script should use this ID). With
    new versions of the script the version numbers should change. EVEN FOR 
    MINOR CHANGES, you should change the version number if you are going to
    disribute it to anyone but internal testers. The point number 
    is for minor bug fix releases. Use it.
    -->
    <id>874920</id>
    <version major="0" minor="1" point="0"/>

    <!--
    These fields are used for categorization purposes. Seperate multiple 
    types with a pipe | character.
    -->
    <type>MovieDetailsFetcher</type>
    <language>German</language>

    <!-- If set to true, additional logging will be displayed during script execution. -->
    <debug>true</debug>
  </details>
  
  <action name="search">
    <retrieve name="search_page" url="http://xml.n4rf.net/ofdbgw/search/${search.title:safe}"/>
    
    <!-- if we got a search result page, this is used. if not, regex does not match so we dont process the outer loop.-->
    <parse name="search_results_block" input="${search_page}" regex='&lt;resultat&gt;.+&lt;/resultat&gt;'/>
    <loop name="search_results_verified" on="search_results_block">
      <parse name="movie_details" input="${search_results_verified}" regex='&lt;eintrag&gt;.*?&lt;id&gt;(.+?)&lt;/id&gt;.*?&lt;titel&gt;(.+?)(\s/\s(.+?))?\((\d{4})\).*?&lt;/titel&gt;.*?&lt;/eintrag&gt;' />
      <loop name="curr_details" on="movie_details">
        <parse name="title" input="${curr_details[1]:htmldecode}" regex="(.+?)(?:, (The|A))?\s*$"/>-->
        <parse name="aka" input="${curr_details[3]:htmldecode}" regex="(.+?)(?:, (The|A))?\s*$"/>-->
        <set name="movie[${count}].title" value="${title[0][1]} ${title[0][0]}"/>
        <set name="movie[${count}].aka" value="|${aka[0][1]} ${aka[0][0]}|"/>
        <set name="movie[${count}].year" value="${curr_details[4]:htmldecode}"/>
        <set name="movie[${count}].details_url" value="http://xml.n4rf.net/ofdbgw/movie/${curr_details[0]}"/>
        <subtract name="movie[${count}].popularity" value1="100" value2="${count}"/>-->
      </loop>
    </loop>
    
  </action>

  <action name="get_details">
    <retrieve name="details_page" url="${movie.details_url}"/>

    <!-- IMDB ID -->
    <parse name="imdb" input="${details_page}" regex="(tt[\d]+)"/>
    <set name="movie.imdb_id" value="${imdb[0][0]}"/>
    
    <!-- Title and Year -->
    <parse name="title_year" input="${details_page}" regex="&lt;title&gt;(.+?)(?:, (The|A))?\s\((\d{4})\).*&lt;/title&gt;"/>
    <set name="movie.title" value="${title_year[0][1]} ${title_year[0][0]}"/>
    <set name="movie.year" value="${title_year[0][2]}"/>
    
    <!-- Film info-->
    <parse name="filminfo_block" input="${details_page}" regex='&lt;div id="film_info"&gt;.*?&lt;/div&gt;'/>

    <!-- Directors -->
    <parse name="directors_block" input="${filminfo_block}" regex='&lt;br /&gt;geregisseerd\sdoor\s(.*?)&lt;br /&gt;met'/>
    <parse name="directors" input="${directors_block}" regex='&lt;a\shref="http://www.moviemeter.nl/director/[\d]+">([^&lt;]+)'/>
    <set name='movie.directors' value=''/>
    <loop name='currDirector' on='directors'>
      <set name="movie.directors" value="${movie.directors}|${currDirector[0]:htmldecode}"/>
    </loop>

    <!-- Actors -->
    <parse name="actors_block" input="${filminfo_block}" regex='&lt;br\s/&gt;met\s(.*?)&lt;br\s/&gt;&lt;br'/>
    <parse name='actors' input='${actors_block[0][0]}' regex='(\sen\s)*(.+?)(\,\s|\sen\s|$)'/>
    <set name='movie.actors' value=''/>
    <loop name='currActor' on='actors'>
      <set name='movie.actors' value='${movie.actors}|${currActor[1]:htmldecode}'/>
    </loop>

    <!-- Genres -->
    <parse name="genres_block" input="${filminfo_block}" regex='&lt;div\sid="film_info"&gt;.+?&lt;br\s/&gt;(.+?)&lt;br'/>
    <parse name='genres' input='${genres_block[0][0]}' regex='([^/]+)'/>
    <set name='movie.genres' value=''/>
    <loop name='currGenre' on='genres'>
      <set name='movie.genres' value='${movie.genres}|${currGenre[0]:htmldecode}'/>
    </loop>

    <!-- Runtime-->
    <parse name="runtime" input="${filminfo_block}" regex='&lt;div\sid="film_info"&gt;.+?&lt;br\s/&gt;.+?&lt;br\s/&gt;(.+?)\sminuten'/>
    <set name="movie.runtime" value="${runtime[0][0]:htmldecode}"/>
    
    <!-- Plot Summary -->
    <parse name="plot" input ="${filminfo_block}" regex='&lt;br /&gt;met\s.+?&lt;br /&gt;&lt;br /&gt;(.*?)&lt;/div&gt;'/>
    <set name="movie.summary" value="${plot[0][0]:htmldecode}"/>

    <!-- Votes block-->
    <parse name="votes_block" input="${details_page}" regex='&lt;div id="film_votes"&gt;.*?&lt;/div&gt;'/>
    <parse name="votes" input="${votes_block}" regex='&lt;b&gt;([,\d]+)&lt;/b&gt;' />

    <!-- Score -->
    <multiply name="score" value1="${votes[1][0]:htmldecode}" value2="2"/>
    <set name="movie.score" value="${score}"/>-->

    <!-- Popularity -->
    <set name="movie.popularity" value="${votes[0][0]:htmldecode}"/>

  </action>
  
</ScriptableScraper>