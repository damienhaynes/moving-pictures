//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediaPortal.Plugins.MovingPictures.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MediaPortal.Plugins.MovingPictures.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap accept {
            get {
                object obj = ResourceManager.GetObject("accept", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap approved {
            get {
                object obj = ResourceManager.GetObject("approved", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_cross {
            get {
                object obj = ResourceManager.GetObject("arrow_cross", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_divide {
            get {
                object obj = ResourceManager.GetObject("arrow_divide", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_down {
            get {
                object obj = ResourceManager.GetObject("arrow_down", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_down1 {
            get {
                object obj = ResourceManager.GetObject("arrow_down1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_down2 {
            get {
                object obj = ResourceManager.GetObject("arrow_down2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_join {
            get {
                object obj = ResourceManager.GetObject("arrow_join", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_rotate_clockwise {
            get {
                object obj = ResourceManager.GetObject("arrow_rotate_clockwise", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_switch {
            get {
                object obj = ResourceManager.GetObject("arrow_switch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cross {
            get {
                object obj = ResourceManager.GetObject("cross", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap exclamation {
            get {
                object obj = ResourceManager.GetObject("exclamation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap folder_image {
            get {
                object obj = ResourceManager.GetObject("folder_image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ignored {
            get {
                object obj = ResourceManager.GetObject("ignored", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap information {
            get {
                object obj = ResourceManager.GetObject("information", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;MoviesPluginSettings&gt;
        ///  
        ///  &lt;group name=&quot;Movie Importer&quot;&gt;
        ///    &lt;group name=&quot;General&quot;&gt;
        ///      &lt;setting id=&quot;importer_thread_count&quot; name=&quot;Thread Count&quot; type=&quot;INT&quot;&gt;
        ///        &lt;default&gt;5&lt;/default&gt;
        ///        &lt;description&gt;The number of threads retrieving move details for local media. A higher number uses more system resources, but can help with slow data providers. Do not set this value higher than 10 threads.&lt;/description&gt;
        ///      &lt;/setting&gt;
        ///
        ///    &lt;/group&gt;
        ///    
        ///    &lt;group name=&quot;Cover Art&quot;&gt;
        ///      &lt;setting id=&quot;c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InitialSettings {
            get {
                return ResourceManager.GetString("InitialSettings", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap list_add {
            get {
                object obj = ResourceManager.GetObject("list_add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap list_remove {
            get {
                object obj = ResourceManager.GetObject("list_remove", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MediaPause {
            get {
                object obj = ResourceManager.GetObject("MediaPause", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MediaPlay {
            get {
                object obj = ResourceManager.GetObject("MediaPlay", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MediaStop {
            get {
                object obj = ResourceManager.GetObject("MediaStop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap noatunplay {
            get {
                object obj = ResourceManager.GetObject("noatunplay", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap noatunstop {
            get {
                object obj = ResourceManager.GetObject("noatunstop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap resultset_next {
            get {
                object obj = ResourceManager.GetObject("resultset_next", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap resultset_previous {
            get {
                object obj = ResourceManager.GetObject("resultset_previous", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tick {
            get {
                object obj = ResourceManager.GetObject("tick", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap world_add {
            get {
                object obj = ResourceManager.GetObject("world_add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap zoom {
            get {
                object obj = ResourceManager.GetObject("zoom", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
